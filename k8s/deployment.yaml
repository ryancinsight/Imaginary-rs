apiVersion: apps/v1
kind: Deployment
metadata:
  name: imaginary-rs
  namespace: imaginary-rs
  labels:
    app.kubernetes.io/name: imaginary-rs
    app.kubernetes.io/component: image-processing
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: imaginary-rs
  template:
    metadata:
      labels:
        app.kubernetes.io/name: imaginary-rs
        app.kubernetes.io/component: image-processing
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
      containers:
      - name: imaginary-rs
        image: ghcr.io/your-org/imaginary-rs:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info"
        - name: IMAGINARY_ALLOW_INSECURE
          value: "0"
        - name: IMAGINARY_API_KEY
          valueFrom:
            secretKeyRef:
              name: imaginary-rs-secrets
              key: api_key
        - name: IMAGINARY_SALT
          valueFrom:
            secretKeyRef:
              name: imaginary-rs-secrets
              key: api_salt
        volumeMounts:
        - name: config
          mountPath: /usr/local/etc/imaginary-rs/config
          readOnly: true
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: imaginary-rs-config
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
