[package]
name = "imaginary-rs"
version = "0.1.0"
edition = "2021"
description = "Fast, simple, scalable HTTP microservice for high-level image processing"
authors = ["Ryan <ryancinsight>"]
license = "MIT"
repository = "https://github.com/ryancinsight/imaginary-rs"

[dependencies]
# Web framework
axum = {version = "0.7.9", features= ["multipart"]}
tower = "0.5.2"
tower-http = { version = "0.6.2", features = [
    "cors", 
    "trace",
    "compression-full",
    "limit",
    "timeout",
    "catch-panic",
    "request-id",
    "sensitive-headers",
    "validate-request",
    "trace"
]}
hyper = { version = "1.5.2", features = ["full"] }

# Image processing
image = "0.25.5"
imageproc = "0.25.0"
webp = "0.3.0"
mozjpeg = "0.10.12"

# Runtime and async
tokio = { version = "1.32", features = ["full"] }
futures = "0.3"

# Error handling
thiserror = "2.0.9"
anyhow = "1.0"

# Configuration and environment
clap = { version = "4.4", features = ["derive"] }
config = "0.15.4"
dotenv = "0.15"

# Logging and metrics
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
metrics = "0.24.1"
metrics-exporter-prometheus = "0.16.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# HTTP client
reqwest = { version = "0.12.11", features = ["json", "stream"] }

# Utility
mime = "0.3"
bytes = "1.5"
uuid = { version = "1.4", features = ["v4", "serde"] }
base64 = "0.22.1"
sha2 = "0.10"
hmac = "0.12"
rand = "0.8"
http = "1.0"

# Performance optimizations
rayon = "1.8"
cached = "0.46"
crossbeam = "0.8"

[dev-dependencies]
tokio-test = "0.4"
pretty_assertions = "1.4"
mockall = "0.13.1"
wiremock = "0.6.2"

[features]
default = ["jpeg", "png", "webp"]
jpeg = []
png = []
webp = []
heif = []
gif = []
simd = []  # Optional SIMD optimizations

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 1
debug = true

[[bin]]
name = "imaginary"
path = "src/main.rs"

[lib]
name = "imaginary"
path = "src/lib.rs"
